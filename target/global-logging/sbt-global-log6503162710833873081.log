[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\isv4\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\isv4\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.13)
[debug]       Load.loadUnit: plugins took 113.5277ms
[debug]       Load.loadUnit: defsScala took 0.2343ms
[debug] [Loading] Scanning directory C:\Users\isv4\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isv4\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.2657 ms
[debug]           Load.resolveProject(global-plugins) took 40.0412ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\isv4\.sbt\1.0\plugins, plugins: List(<none>))) took 81.9004ms
[debug] [Loading] Done in C:\Users\isv4\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 102.7039ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4686ms
[debug]     Load.loadUnit(file:/C:/Users/isv4/.sbt/1.0/plugins/, ...) took 227.3446ms
[debug]   Load.apply: load took 411.0737ms
[debug]   Load.apply: resolveProjects took 6.5717ms
[debug]   Load.apply: finalTransforms took 72.5939ms
[debug]   Load.apply: config.delegates took 25.7847ms
[debug]   Load.apply: Def.make(settings)... took 890.2477ms
[debug]   Load.apply: structureIndex took 216.9379ms
[debug]   Load.apply: mkStreams took 10.3193ms
[info] loading global plugins from C:\Users\isv4\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4527.5967ms
[debug]           Load.loadUnit: plugins took 44.9665ms
[debug]           Load.loadUnit: defsScala took 0.0086ms
[debug] [Loading] Scanning directory C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2\project
[debug]             Load.loadUnit: mkEval took 8.8113ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4114 ms
[info] loading settings for project cs557-lab2-build from idea.sbt ...
[debug]               Load.resolveProject(cs557-lab2-build) took 4.6608ms
[debug]             Load.loadTransitive: finalizeProject(Project(id cs557-lab2-build, base: C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2\project, plugins: List(<none>))) took 6.4968ms
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2\project, returning: (cs557-lab2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 124.2317ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.7096ms
[debug]         Load.loadUnit(file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab2/project/, ...) took 184.0726ms
[debug]       Load.apply: load took 185.354ms
[debug]       Load.apply: resolveProjects took 0.0828ms
[debug]       Load.apply: finalTransforms took 5.3096ms
[debug]       Load.apply: config.delegates took 0.2647ms
[debug]       Load.apply: Def.make(settings)... took 67.9889ms
[debug]       Load.apply: structureIndex took 26.4002ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 624.0909ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2
[debug]       Load.loadUnit: mkEval took 0.564ms
[debug] [Loading] Found root project my_vector w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5165 ms
[info] loading settings for project my_vector from build.sbt ...
[debug]         Load.resolveProject(my_vector) took 50.3388ms
[debug]       Load.loadTransitive: finalizeProject(Project(id my_vector, base: C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2, plugins: List(<none>))) took 54.8714ms
[debug] [Loading] Done in C:\Users\isv4\Documents\24-25\ECE 557\cs557-lab2, returning: (my_vector)
[debug]     Load.loadUnit: loadedProjectsRaw took 310.7432ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.9293ms
[debug]   Load.loadUnit(file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab2/, ...) took 943.5773ms
[debug] Load.apply: load took 947.2804ms
[debug] Load.apply: resolveProjects took 0.4314ms
[debug] Load.apply: finalTransforms took 36.3421ms
[debug] Load.apply: config.delegates took 0.2064ms
[debug] Load.apply: Def.make(settings)... took 77.5569ms
[debug] Load.apply: structureIndex took 28.2429ms
[debug] Load.apply: mkStreams took 0.0022ms
[info] set current project to prose (in build file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59196 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59196, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to prose (in build file:/C:/Users/isv4/Documents/24-25/ECE%20557/cs557-lab2/)
[debug] > Exec(idea-shell, None, None)
